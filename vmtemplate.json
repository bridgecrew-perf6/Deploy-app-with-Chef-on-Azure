{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "deploymentId": {
            "type": "string"
        }
    },
    "variables": {
        "imagePublisher": "chef-software",
        "location": "[resourceGroup().location]",
        "authenticationType": "password",
        "diagstorageAccountName":  "[concat('diagstrg', parameters('deploymentId'))]",
        "nicName": "chefAutomateNic",
        "storageAccountName": "[concat('strg', parameters('deploymentId'))]",
        "publicIPDnsName": "[concat('pip-', parameters('deploymentId'))]",
        "osProfilepassword": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "osProfile": "[variables(concat('osProfile', variables('authenticationType')))]",
        "rubyPath": "/opt/chef-marketplace/embedded/bin/ruby",
        "scriptUrl": "[concat(variables('baseUrl'), '/automate_setup.rb')]",
        "sgName": "chefAutomateSg",
        "imageProduct": "chef-automate-vm-image",
        "imageSKU": "byol",
        "imageVersion": "latest",
        "publicIPAddressName": "chefautomate-pip",
        "publicIPAddressResourceGroup": "[resourceGroup().name]",
        "publicIPAddressType": "Dynamic",
        "dnsLabelPrefix": "[variables('publicIPDnsName')]",
        "storageAccountType": "Standard_LRS",
        "subnetName": "chefautomate-subnet",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkAddressPrefix": "10.0.0.0/16",
        "virtualNetworkName": "chefautomate-vnet",
        "automateLicenseUri": "",
        "vmName": "chefautomate-vm",
        "vmSize": "Standard_D2_v3",
        "baseUrl": "https://gallery.azure.com/artifact/20151001/chef-software.chef-automateallinone.1.0.15/Artifacts",
        "storageAccountName2": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
        "dnsLabelPrefix2": "[concat('mrppip-', parameters('deploymentId'))]",
        "ubuntuOSVersion2": "16.04.0-LTS",
        "imagePublisher2": "Canonical",
        "imageOffer2": "UbuntuServer",
        "nicName2": "mrpVMNic",
        "storageAccountType2": "Standard_LRS",
        "publicIPAddressName2": "mmrpPublicIP",
        "vmName2": "mrpUbuntuVM",
        "vmSize2": "Standard_A1",
        "virtualNetworkName2": "mmrpVNET",        
        "vnetID2": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName2'))]",
        "subnetRef2": "[concat(variables('vnetID2'),'/subnets/',variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "name": "pid-e843308b-3ce2-42a2-b743-2f21b36a5e68",
            "properties": {
              "mode": "Incremental",
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "resources": []
              }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "properties": {
              "addressSpace": {
                "addressPrefixes": [
                  "[variables('virtualNetworkAddressPrefix')]"
                ]
              },
              "subnets": [
                {
                  "name": "[variables('subnetName')]",
                  "properties": {
                    "addressPrefix": "[variables('subnetPrefix')]"
                  }
                }
              ]
            }
          },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('sgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "git",
                        "properties": {
                            "priority": 1030,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "8989",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "properties": {
              "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
              "dnsSettings": {
                "domainNameLabel": "[variables('dnsLabelPrefix')]"
              }
            }
          },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "sku":{
              "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "location": "[variables('location')]"
          },
          {
            "name": "[variables('diagstorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "sku":{
              "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "location": "[variables('location')]"
          },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('sgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "name": "[variables('vmName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagstorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "plan": {
                "name": "[variables('imageSKU')]",
                "product": "[variables('imageProduct')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageProduct')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[variables('vmName')]",
                        "vhd": {
                            "uri": "[concat(reference(variables('storageAccountName'), '2019-06-01').primaryEndpoints['blob'], 'vhds/', variables('vmName'), uniquestring(resourceGroup().id), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(variables('diagstorageAccountName'), '2019-06-01').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-12-01",
            "name": "[concat(variables('vmName'),'/automate_setup')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('scriptUrl')]"
                    ],
                    "commandToExecute": "[concat(variables('rubyPath'), ' ./automate_setup.rb --fqdn \"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))).dnsSettings.fqdn, '\" --license \"', variables('automateLicenseUri'), '\"')]"
                }
            }
        },
        {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName2')]",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "[variables('storageAccountType2')]"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName2')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[variables('dnsLabelPrefix2')]"
          }
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName2')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('virtualNetworkAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName2')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName2'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName2'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef2')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName2')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName2'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize2')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName2')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher2')]",
              "offer": "[variables('imageOffer2')]",
              "sku": "[variables('ubuntuOSVersion2')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "lun": 0,
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName2')), '2016-01-01').primaryEndpoints.blob)]"
            }
          }
        }
      }
    ],
    "outputs": {
        "fqdn": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))).dnsSettings.fqdn]"
        },
        "chefAutomateURL": {
            "type": "String",
            "value": "[concat('https://', reference(variables('publicIPAddressName')).dnsSettings.fqdn, '/biscotti/setup')]"
        },
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName2')).dnsSettings.fqdn]"
          },
          "sshCommand": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName2')).dnsSettings.fqdn)]"
          }
    }
}
